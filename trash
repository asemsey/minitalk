
// void	bin_to_char(char *bits)
// {
// 	unsigned char	c;
// 	int				bit;
// 	int				i;

// 	bit = 128;
// 	i = 0;
// 	c = 0;
// 	while (bit > 0)
// 	{
// 		if (bits[i] == '1')
// 			c += bit;
// 		i++;
// 		bit /= 2;
// 	}
// 	write(1, &c, 1);
// }

// void	sig_handler(int sig)
// {
// 	static int bit;
// 	static char	*c;

// 	if (!c)
// 	{
// 		c = (char *)malloc(sizeof(char) * 9);
// 		if (!c)
// 			return ;
// 	}
// 	if (sig == SIGUSR1)
// 		c[bit] = '1';
		
// 	else if (sig == SIGUSR2)
// 		c[bit] = '0';
// 	bit++;
// 	if (bit == 8)
// 	{
// 		c[bit] = '\0';
// 		bin_to_char(c);
// 		free(c);
// 		c = NULL;
// 		bit = 0;
// 	}
// }